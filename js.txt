vue3 
react 
react-native 
flutter
WebAssembly
WebGPU 



（1）getComputedStyle与currentStyle

http://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/







 (2)  原生 JS 获取元素的尺寸和位置 

https://segmentfault.com/a/1190000007687940






（3）array reduce

数值型数组的累加
[1, 2, 3].reduce((sum, el) => sum + el, 0)
或 （没有默认值时sum的值为数组的第一个元素，所以参与循环的是arr[1:], 比定义默认值时少一个迭代）
[1, 2, 3].reduce((sum, el) => sum + el)；

对象型数组的累加
[{num: 1, ind: 2}, {num: 1, ind: 2}, {num: 1, ind: 2}].reduce((sum, el) => {sum.num = sum.num + el.num;sum.ind = sum.ind + el.ind; return sum}, {num: 0, ind: 0})
或 （没有默认值时sum的值为数组的第一个元素，所以参与循环的是arr[1:], 比定义默认值时少一个迭代）
[{num: 1, ind: 2}, {num: 1, ind: 2}, {num: 1, ind: 2}].reduce((sum, el) => {sum.num = sum.num + el.num;sum.ind = sum.ind + el.ind; return sum})





（4）promise 串行请求（可改造成可以控制并发数的串行请求）

    layerDef._loadDisposable = this.backendService.getData('./assets/datas/fi/airport.json').map(res => res.json()).mergeMap((res: any) => {
      let promiseQueue:any = Promise.resolve(null);
      res.features.forEach((element, index) => {
        promiseQueue = promiseQueue.then((data) => {  //then方法会返回新的promise,所以需要存储最新的
          if (data && data.data) {
            dataRender(data.data);
          }

          if (!this.amdarCancel) {  //由于rxjs不知道为什么这里订阅取消不掉，才采用这种不妥的方式来取消订阅
            return this.backendService.getData(url+ '&airport=' + element.properties.name).map(res => res.json()).toPromise();
          }

          return null;
        })
      });
      promiseQueue.catch((err) => console.error(err));

      return promiseQueue;
    }).subscribe(
      (data: any) => {
        this.missionService.addloading(false);
      },
      err => {
        this.missionService.addloading(false);
      }
    );





（5）使用js导出csv文件
https://halistechnology.com/2015/05/28/use-javascript-to-export-your-data-as-csv/






（6）页面滚动

var toTop = document.documentElement.scrollHeight;


var timer = setInterval(function (){
	if(toTop<0) {clearInterval(timer)}
	document.documentElement.scrollTo(0, toTop-=10);
},16);



https://blog.csdn.net/github_39598787/article/details/80310997

https://blog.csdn.net/white__cat/article/details/55188948

https://blog.csdn.net/houyanhua1/article/details/79579714

https://blog.csdn.net/L25000/article/details/46343665

https://blog.csdn.net/zhq426/article/details/5755825






（7）offsetTop










（8）js判断是否是数字

    // 判断一个字符串是否为数字
    isNumber(str: string) {
        // [+-]?  匹配一个加或一个减或不匹配
        //(0|[1-9][0-9]*)  只匹配一个0 或 匹配以非零开始的整数
        //(\.[0-9]+)?  /要么不匹配要么匹配一个.并且后面跟有数字
        return /^[+-]?(0|[1-9][0-9]*)(\.[0-9]+)?$/.test(str);
    }

    // 强化isNaN函数,以判断是否为非数字
    isNaN(val: any) {
        // /^\s*$/ 匹配空字符
        if (/^\s*$/.test(val) || val === null) return true;
        return isNaN(val);
    }





（9）巧用 || 逻辑运算符

  var name = obj.name;  //假定obj对象下的name属性不一定存在，但是我想保正如果不存在时name值为空字符串;

例1：name = name || '';
例2:  name = name ? name : '';

想要的输出：var domStr = '<img src="./xxx.png" title="'+ name +'">';

由上可见例1比例2更简单






（10）万能排序（数字，字母， 中文）

const sort = (arr, isUpSort) => {
        return arr.slice().sort((a, b) => {
          if (isUpSort) {
            return b.localeCompare(a);
          }else {
            return a.localeCompare(b);
          }
        })
};



（11）document.domain 和 window.postMessage 跨域 ：https://www.cnblogs.com/webbest/p/7161174.html

document.domain必须主域相同 而 window.postMessage没有限制







（12）简单的事件节流 与 防抖

            // 事件节流
            let isCanRun = true;
            window.addEventListener('resize', function () {
                if (!isCanRun) return
                isCanRun = false
                setTimeout(function () {
                    console.log('事件节流')  //你的代码逻辑
                    isCanRun = true
                }, 300)
            })

            // 事件防抖
            let timer = null;
            document.getElementById('#input').addEventListener('input', function () {
                clearTimeout(timer)
                timer = setTimeout(function () {
                    console.log('事件防抖')  //你的代码逻辑
                }, 300)
            })





（13）const reg = /^([1-9]\d*\.\d+|[1-9]\d*|0|0\.\d+)$/   ------  匹配大于等于0的任何数




（14）async函数内await语句必须直接在里面，外面不能嵌套函数，比如在一个forEach循环内，此时将报错







（15）下载后台返回的字节数组数据（文件）

                const a = document.createElement('a')
                var blob = new Blob([new Uint8Array(byteArray)])
                a.href = window.URL.createObjectURL(blob)
                a.download = 'xxx.txt'
                a.click()






（16） requestAnimationFrame

https://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-动画算法/

https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/

http://javascript.ruanyifeng.com/htmlapi/requestanimationframe.html

https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame





（17）不加小括号实例化一个构造函数

var Cmy = function () {}
Cmy.prototype.show = function() {console.log('show')}

(new Cmy).show()   //打印输出‘show’




（18）向控制台输出样式化文本

    function showAttrs() {
        if (navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
            var args = ["\n %c %c %c 二三维一体化气象WebGIS框架  %c  %c →→→ xxx研究院 ←←← %c? %c? %c?%c \n\n", "background: #ff66a5; padding:5px 0;", "background: #ff66a5; padding:5px 0;", "color: #ff66a5; background: #030307; padding:5px 0;", "background: #ff66a5; padding:5px 0;", "background: #ffc3dc; padding:5px 0;", "background: #ff66a5; padding:5px 0;", "color: #ff2424; background: #fff; padding:5px 0;", "color: #ff2424; background: #fff; padding:5px 0;", "color: #ff2424; background: #fff; padding:5px 0;"];
            window.console.log.apply(console, args)
        } else if (window.console) {
            window.console.log("xxx研究院")
        }
    }





（19）下载文件pdf  (主要针对pdf 解决谷歌浏览器a标签下载pdf直接打开的问题)

/**
 * 文件链接转文件流下载--主要针对pdf 解决谷歌浏览器a标签下载pdf直接打开的问题
 * @param url  ：文件链接
 * @param fileName  ：文件名;
 * @param type  ：文件类型;
 */
function fileLinkToStreamDownload(url, fileName, type) {
  let reg = /^([hH][tT]{2}[pP]:\/\/|[hH][tT]{2}[pP][sS]:\/\/)(([A-Za-z0-9-~]+).)+([A-Za-z0-9-~\/])+$/;
  if (!reg.test(url)) {
    throw new Error("传入参数不合法,不是标准的文件链接");
  } else {
    let xhr = new XMLHttpRequest();
    xhr.open('get', url, true);
    xhr.setRequestHeader('Content-Type', `application/${type}`);
    xhr.responseType = "blob";
    xhr.onload = function () {
      if (this.status == 200) {
        //接受二进制文件流
        var blob = this.response;
        downloadExportFile(blob, fileName, type)
      }
    }
    xhr.send();
  }
}


/**
 *下载导出文件
 * @param blob  ：返回数据的blob对象或链接
 * @param tagFileName  ：下载后文件名标记
 * @param fileType  ：文件类 word(docx) excel(xlsx) ppt等
 */
function downloadExportFile(blob, tagFileName, fileType) {
  let downloadElement = document.createElement('a');
  let href = blob;
  if (typeof blob == 'string') {
    downloadElement.target = '_blank';
  } else {
    href = window.URL.createObjectURL(blob); //创建下载的链接
  }
  downloadElement.href = href;
  downloadElement.download = tagFileName + moment(new Date().getTime()).format('YYYYMMDDhhmmss') + '.' + fileType; //下载后文件名
  document.body.appendChild(downloadElement);
  downloadElement.click(); //点击下载
  document.body.removeChild(downloadElement); //下载完成移除元素
  if (typeof blob != 'string') {
    window.URL.revokeObjectURL(href); //释放掉blob对象
  }

}





（20）计算字符串中中文字符的长度

const text = 'm中文字符2.6'
const len = text.match(/[\u4e00-\u9fa5]/g).length






（21）使用a标签的download属性下载的文件不能跨域，否则会直接跳转页面




（22）直接在scroll上阻止事件冒泡和默认事件不管用，这时可以在mousewheel上做相同操作以满足需求



（23）设置对象参数的函数默认值

function fn({arg1 = 1, arg2 = 'str'} = {}) {
	console.log(arg1, arg2)
} 

fn()  // 输出：1 str




（24）Math.pow的反向操作
Math.pow(2, 3)  // 8  2的3次方为8
Math.log(8) / Math.log(2)  // 3  8以2为基数的幂是3










