参考文章：
https://www.cnblogs.com/lecaf/archive/2013/08/23/mongodb.html
http://blog.csdn.net/mzbonnt/article/details/51461331
http://blog.csdn.net/wycf1314/article/details/10113881     ---服务无法启动的问题，原因在于cmd运行时没有使用管理员权限





mongoDB（3.6.0）使用记要：


假如mongodb安装在：E:\mongodb文件夹下

在这我将存储数据的文件夹data放在了安装目录的里面，即：E:\mongodb，然后在data里再手动创建db和log文件夹





<一> 启动mongodb服务：

进入E:\mongodb\bin目录，打开命令行，执行如下命令以启动mongodb服务，配置方式有两种， 如下：
（1）[mongod.exe | mongod]    --dbpath E:\mongodb\data   ---指定数据库文件夹所在位置；
（2）[mongod.exe | mongod]    [-f | --config]    E:\mongodb\etc\mongod.conf   ---指定配置文件所在位置；

服务启动成功后，会有这样的提示： ... waiting for connections on port 27017 ..., 表明服务以启动成功，服务端口为27017,
如果以方式（2）启动的，则不会有提示成功的信息，需要在E:\mongodb\data\log\mongod.log系统日志中查看，如果出现什么异常，
可查看E:\mongodb\data\log\mongod.log以了解错误

安装mongodb服务(注意：cmd需要管理员权限， 找到C:\Windows\System32\cmd.exe或者搜索，右键以管理员打开， cd到E:\mongodb\bin), 步骤如下：
mongod -f E:\mongodb\etc\mongod.conf --install --serviceName "MongoDB" --serviceDisplayName "MongoDB"  ------ 注册服务
net start MongoDB ------ 启动服务(可以在任意路径下执行该命令)
net stop MongoDB ------ 停止服务(可以在任意路径下执行该命令)
mongod --remove   ------ 删除服务（在E:\mongodb\bin的docs窗口下执行该命令）
为什么要安装mongodb服务？ 当服务启动后，可以在当前窗口下使用mongo shell,而无需再单独打开一个docs窗口





<二>连接mongodb
进入E:\mongodb\bin目录，执行mongo命令，以操作mongodb数据库，但是每次都进入该目录去执行mogo shell(即操作mongodb
数据库)太过麻烦,此时可以将该目录添加到环境变量，这样就可以打开cmd便可以使用mongo shell以及mongod shell了,方法是：复制mongodb的可执行文件的目录路径，在名为Path的环境变量中追加该路径，保存后即可使用




<三>对上面的总结
通过上面的配置，我可以这样启动并操作mongodb数据库：打开cmd（要有管理员权限） ,执行net start MongoDB启动服务，然后执行mongo去操作数据库







<四>创建用户

（1）先关闭auth认证, 用net start MongoDB(如果配置文件里启用了auth，要先改为false)命令启动mongodb，以使mongodb在
无auth的状态下启动

（2）首先要创建一个管理用户的用户（userAdminAnyDatabase, 只在admin数据库中可用，赋予用户所有数据库的userAdmin权限
,即只能新建数据库并添加用户，或修改已有数据库的用户，userAdminAnyDatabase 权限只是针对用户管理的，对其他是没有权限的），创建在名为admin的库里，以管理所有用户，如下：

use admin
db.createUser({
	user: 'admin'，
	pwd: 'admin',
	roles: [{ role: 'userAdminAnyDatabase', db: 'admin' }]
})

（3）刚建立了 userAdminAnyDatabase 角色，用来管理用户，可以通过这个角色来创建、删除用户。验证：需要开启auth参数（该参数可以在配置文件中配置，或者在doc窗口执行：mongod -f E:\mongodb\etc\mongod.conf --auth）登录方式如下:
use admin
db.auth('admin', 'admin')

登陆后就可以管理用户了



（4）创建某一个数据库的超级管理员用户,该用户可以对该数据库做任何操作
use shopping
db.createUser({user:'dong',pwd:'dong',roles:[{role:'dbOwner',db:'shopping'}]})


（5）后续请看：https://www.cnblogs.com/zhoujinyi/p/4610050.html




























