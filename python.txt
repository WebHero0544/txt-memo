（1）给函数传递实参时有位置参数的话都放在前面，有关键字参数的话都放在后面，且前者和后者都是连续的，前者不能中间夹着关键字参数，后者不能中间夹着位置参数：

def fn(name, age, like, job):
	print(name, age, like, job)

fn('dong', 28, job='程序员', like='篮球')


（2）如果函数的默认参数是引用类型，如果多次调用后都没有传递该引用类型参数，则如果该引用类型参数的默认值在函数内被修改的话，多次调用修改的就是同一个对象：

def fn(name, arr=[]):
	arr.append(name)
	print(arr)

fn('dong')   ------ ['dong']
fn('zhang')  ------ ['dong', 'zhang']
fn('liu')  ---------- ['dong', 'zhang', 'liu']


（2）python标准库：re 正则表达式  https://docs.python.org/zh-cn/3/library/index.html





（3）在win上安装python后，pip不是有效的命令：

不知为何，最后将之前的安装的python卸载掉，重新安装时选择自定义一路直接下一步即可，之后pip完全可用





（4）一行命令创建一个web服务器： py -m http.server 3000（不指定端口默认为8000）     ----------  有时间看看有哪些参数可以配置






（5）pip list  查看所有已安装包

（6）pip install openpyxl==3.1.5  安装指定版本的包

（7）pip install --upgrade package_name  更新包


（8）https://zhuanlan.zhihu.com/p/689194937
	
查看pip版本
pip --version

pip --V

升级pip版本
pip install --upgrade pip

pip install -U pip

查看pip帮助信息
pip --help

pip -h



# 查看已安装包列表
pip list

# 查看已安装包列表中，可进行升级的包
pip list --outdated
pip list -o

# 查看已安装包列表中，已更新到最新版本的包
pip list --uptodate
pip list -u


# 安装最新版本的包
pip install [包名]
# 安装最新版本的numpy包
pip install numpy


事实上，还可以指定版本要求，允许使用的有:

== ：等于指定版本
> ：大于指定版本
>= ：大于等于指定版本
< ：小于指定版本
<= ：小于等于指定版本

# 安装指定版本的包
pip install "[包名]=[<版本]"
# 安装1.25.1版本的numpy包
pip install "numpy==1.25.1"

# 安装版本大于指定版本的包
pip install "[包名]>[版本]"
# 安装版本大于1.25.1版本的numpy包
pip install "numpy>1.25.1"



# 升级指定包到最新版本
pip install --upgrade [包名]
pip install -U [包名]

# 升级指定numpy包到最新版本
pip install -U numpy


同理，升级包时也可以使用==、>、>=、<、<=来指定版本要求。例如
# 将numpy包升级到 小于等于 1.24.2版本
pip install "numpy<=1.24.2"





# 查看指定已安装包的详息
pip show [包名]

# 查看指定已安装包的详细信息，包含包中每个文件的安装路径信息
pip show -f [包名]

# 查看aliyun-python-sdk-core的信息
pip show aliyun-python-sdk-core

# 查看aliyun-python-sdk-core的详细信息
pip show -f aliyun-python-sdk-core




# 卸载指定包
pip uninstall [包名]

# 卸载numpy包
pip uninstall numpy




























